//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VideoClub.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class fileLoggerEntities : DbContext
    {
        public fileLoggerEntities()
            : base("name=fileLoggerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Logs> Logs { get; set; }
    
        public virtual int InsertLog(string level, string callSite, string type, string message, string stackTrace, string innerException, string additionalInfo)
        {
            var levelParameter = level != null ?
                new ObjectParameter("level", level) :
                new ObjectParameter("level", typeof(string));
    
            var callSiteParameter = callSite != null ?
                new ObjectParameter("callSite", callSite) :
                new ObjectParameter("callSite", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var stackTraceParameter = stackTrace != null ?
                new ObjectParameter("stackTrace", stackTrace) :
                new ObjectParameter("stackTrace", typeof(string));
    
            var innerExceptionParameter = innerException != null ?
                new ObjectParameter("innerException", innerException) :
                new ObjectParameter("innerException", typeof(string));
    
            var additionalInfoParameter = additionalInfo != null ?
                new ObjectParameter("additionalInfo", additionalInfo) :
                new ObjectParameter("additionalInfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertLog", levelParameter, callSiteParameter, typeParameter, messageParameter, stackTraceParameter, innerExceptionParameter, additionalInfoParameter);
        }
    }
}
